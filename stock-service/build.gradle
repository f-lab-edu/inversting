plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'org.asciidoctor.jvm.convert'
    id 'jacoco'
}

group = "${projectGroup}"
version = "${applicationVersion}"
sourceCompatibility = "${javaVersion}"

ext {
    set('springCloudVersion', "2022.0.4")
    set('snippetsDir', file("build/generated-snippets"))
}

repositories {
    mavenCentral()
}

configurations {
    asciidoctorExtensions
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    implementation platform("io.awspring.cloud:spring-cloud-aws-dependencies:${awsCloudVersion}")

    implementation "com.github.gavlyukovskiy:p6spy-spring-boot-starter:${p6spyVersion}"
    implementation "org.mapstruct:mapstruct:${mapStructVersion}"
    implementation "com.google.guava:guava:${guavaVersion}"
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-sqs'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${mapStructBindingVersion}"

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation "de.flapdoodle.embed:de.flapdoodle.embed.mongo:${embededMongoVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
    finalizedBy 'asciidoctor'
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExtensions'
    dependsOn test
}
